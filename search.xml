<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>table表格里应用省略号text-overflow:ellipsis;</title>
      <link href="/2019/11/21/text-overflow-ellipsis-in-table/"/>
      <url>/2019/11/21/text-overflow-ellipsis-in-table/</url>
      
        <content type="html"><![CDATA[<div align="middle"><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=115343&auto=1&height=66"></iframe></div><p>本文参考：ccs2.1中文版规范 <a href="http://www.ayqy.net/doc/css2-1/cover.html" target="_blank" rel="noopener">http://www.ayqy.net/doc/css2-1/cover.html</a><br>                  ccs2.1中文版规范table部分 <a href="http://www.ayqy.net/doc/css2-1/tables.html#width-layout" target="_blank" rel="noopener">http://www.ayqy.net/doc/css2-1/tables.html#width-layout</a></p><h3 id="1-起因"><a href="#1-起因" class="headerlink" title="1.起因"></a>1.起因</h3><p>接到需求，说如果 table 里的字太多就用省略号，很自然就想到 text-overflow:ellipsis (，注意：overflow: hidden; text-overflow:ellipsis; white-space:nowrap 一定要一起用)，但是在 table 中不起作用，问度娘，说要想起作用需给 table元素 设定 table-layout: fixed ，果然起作用了。</p><h3 id="2-text-overflow-ellipsis-起作用的前提"><a href="#2-text-overflow-ellipsis-起作用的前提" class="headerlink" title="2. text-overflow:ellipsis 起作用的前提"></a>2. text-overflow:ellipsis 起作用的前提</h3><blockquote><ol><li>一定要给容器定义宽度<strong>（重点）</strong></li><li>如果少了overflow: hidden;文字会横向撑到容易的外面</li><li>如果少了white-space:nowrap;文字会把容器的高度往下撑；即使你定义了高度，省略号也不会出现，多余的文字会被裁切掉</li><li>如果少了 text-overflow:ellipsis; 多余的文字会被裁切掉，就相当于你这样定义 text-overflow:clip</li></ol></blockquote><h3 id="3-上面重点的前提"><a href="#3-上面重点的前提" class="headerlink" title="3.上面重点的前提"></a>3.上面重点的前提</h3><p><strong>一定要给容器定义宽度</strong>，这就是 table-layout: fixed 起作用，而 table-layout: auto<strong>(table元素默认 auto )</strong> 不起作用的原因，下面一段来自 css2.1 中文版规范：</p><blockquote><p><strong>‘table-layout’</strong><br><em>Value:</em>  auto | fixed | <a href="http://www.ayqy.net/doc/css2-1/cascade.html#value-def-inherit" target="_blank" rel="noopener">inherit</a><br><em>Initial:</em>  auto<br><em>Applies to:</em>  ‘table’和’inline-table’元素<br><em>Inherited:</em>  no<br><em>Percentages:</em>  N/A<br><em>Media:</em>  <a href="http://www.ayqy.net/doc/css2-1/media.html#visual-media-group" target="_blank" rel="noopener">visual</a><br><em>Computed value:</em>  与指定值相同</p></blockquote><blockquote><p><a href="http://www.ayqy.net/doc/css2-1/tables.html#propdef-table-layout" target="_blank" rel="noopener">‘table-layout’</a>属性控制用于表格单元，行和列布局的算法。值含义如下：<br><strong>fixed</strong>: 用固定表格布局算法<br><strong>auto</strong>: 用任意自动表格布局算法</p></blockquote><p><strong>(fixed和auto区别就是一个固定，一个自动)</strong></p><p>下文描述了这两种算法:</p><h5 id="在固定表格布局算法中-fixed-，每列的宽度由下述规则决定："><a href="#在固定表格布局算法中-fixed-，每列的宽度由下述规则决定：" class="headerlink" title="在固定表格布局算法中(fixed)，每列的宽度由下述规则决定："></a>在固定表格布局算法中(fixed)，每列的宽度由下述规则决定：</h5><blockquote><ol><li>一个 width 属性值不为’auto’的列元素所在的列宽度就设置为该宽度值</li><li>否则，由第一行中 width 属性值不为’auto’的单元格确定该列的宽度。如果单元格跨越了多列，就把宽度分到这些列中(the width is divided over the columns)</li><li>所有剩余列均分剩余的水平表格空间 (减去边框或单元格间距)</li></ol></blockquote><p><strong>3中说到，所有剩余列均分剩余的水平表格空间，实际情况就是table将剩余列的宽度平均分，固定每列的宽度就是 剩余宽度/剩余列数 ，text-overflow:ellipsis 起作用的前提就是一定要给容器定义宽度，所以fixed起作用了。</strong></p><h5 id="在自动表格布局算法中-fixed-，列宽由下列步骤决定："><a href="#在自动表格布局算法中-fixed-，列宽由下列步骤决定：" class="headerlink" title="在自动表格布局算法中(fixed)，列宽由下列步骤决定："></a>在自动表格布局算法中(fixed)，列宽由下列步骤决定：</h5><blockquote><ol><li>计算每个单元格的最小内容宽度(MCW)：格式化的内容可以跨越任意多行，但不能从单元格溢出。如果单元格指定的<a href="http://www.ayqy.net/doc/css2-1/visudet.html#propdef-width" target="_blank" rel="noopener">‘width’</a>(W)大于MCW，W就是最小单元格宽度。’auto’值表示MCW是最小单元格宽度，然后，计算每个单元格的“最大”宽度：格式化内容，不考虑除显式换行外的换行</li><li>对于每一列，从只跨越该列的单元格中确定一个最大和最小列宽。最小列宽是最小单元格宽度中最大的那个所需要的最小列宽（或者列<a href="http://www.ayqy.net/doc/css2-1/visudet.html#propdef-width" target="_blank" rel="noopener">‘width’</a>，看哪个更大）。最大列宽是最大单元格宽度中最大的那个所需要的最大列宽（或者列<a href="http://www.ayqy.net/doc/css2-1/visudet.html#propdef-width" target="_blank" rel="noopener">‘width’</a>，看哪个更大）</li><li>对于每个跨越多列的单元格，增加它跨越的列的最小宽度，让它们至少与单元格一样宽。对于最大宽度也这样处理。如果可能的话，把跨越的所有列再扩宽差不多相同宽度</li><li>对于每个’width’不为’auto’的列组元素，增加它跨越的列的最小宽度，让它们至少与列组的’width’一样宽</li></ol></blockquote><p><strong>其实有些事很简单，但是说起来就是绕嘴。。。<br>1中说到，如果单元格指定的<a href="http://www.ayqy.net/doc/css2-1/visudet.html#propdef-width" target="_blank" rel="noopener">‘width’</a>(W)大于MCW，W就是最小单元格宽度。’auto’值表示MCW是最小单元格宽度。</strong></p><p><strong>情况一：当W &gt; MCW时，W是最小单元格宽度，说明 列宽 = W，列宽 装得下文字，用不上省略号。</strong></p><p><strong>情况二：当W &lt; MCW时，MCW是最小单元格宽度时，说明 列宽 = MCW，但是这个MCW是文字撑满下计算出来的，既然是撑满，用省略号干嘛。。。</strong></p><p><strong>要想在不使用table-layout:fixed的情况下，即table-layout:auto前提下用ellipsis，可以像下面这样做(在td里再套一个元素，对这个元素设置ellipsis)</strong></p><pre><code>&lt;style&gt;    div {      width: 100px;    }    .ellipsis {      text-overflow:ellipsis;      overflow: hidden;       text-overflow:ellipsis;       white-space:nowrap;    }&lt;/style&gt;...&lt;td&gt;  &lt;div class=&quot;ellipsis&quot;&gt;    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  &lt;/div&gt;&lt;/td&gt;...</code></pre><p><img src="badge-bg.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
